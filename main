package com.Ascii.Asciinite;

import com.Ascii.Asciinite.init.ModEntitys;
import com.Ascii.Asciinite.init.ModFluids;
import com.Ascii.Asciinite.init.ModRecipes;
import com.Ascii.Asciinite.proxy.CommonProxy;
import com.Ascii.Asciinite.util.Referance;
import com.Ascii.Asciinite.util.handlers.RenderHandler;
import com.Ascii.Asciinite.world.ModWorldGen;
import com.Ascii.Asciinite.world.ModWorldGenerator;
import com.Ascii.Asciinite.world.ModWorldGenerator1;
import com.Ascii.Asciinite.world.ModWorldGenerator2;

import net.minecraftforge.fluids.FluidRegistry;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.registry.GameRegistry;

@Mod(modid = Referance.MOD_ID, name = Referance.NAME, version = Referance.VERSION)
public class Main {

	@Instance
	public static Main Instance;
	
	@SidedProxy(clientSide = Referance.CLIENT_PROXY_CLASS, serverSide = Referance.COMMON_PROXY_CLASS )
	public static CommonProxy proxy;
	
	static { FluidRegistry.enableUniversalBucket(); }
	
	@EventHandler
	public static void PreInit(FMLPreInitializationEvent event)
	{
    	ModFluids.registerFluids();
		GameRegistry.registerWorldGenerator(new ModWorldGen(), 3);
    	GameRegistry.registerWorldGenerator(new ModWorldGenerator2(), 1);
		ModEntitys.registerEntities();
		RenderHandler.registyEntityRenders();
    
      // This is the code that registers the structures and generates it
    	GameRegistry.registerWorldGenerator(new ModWorldGenerator(), 0); 
      
    	GameRegistry.registerWorldGenerator(new ModWorldGenerator1(), 0);
	}
	
	@EventHandler
	public static void Init(FMLInitializationEvent event)
	{
		ModRecipes.init();
	}
	
	@EventHandler
	public static void PostInit(FMLPostInitializationEvent event)
	{
		
	}
	
}
